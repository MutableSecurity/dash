{
    "solutions": {
        "fail2ban": {
            "identifier": "fail2ban",
            "full_name": "Fail2ban",
            "maturity": "Production",
            "description": "Fail2ban is an intrusion prevention software framework that protects Unix-like servers from brute-force attacks. It scans log files and bans IP addresses conducting too many failed operations (for example, login attempts). This module targets Debian-based operating systems and has already set a SSH jail.",
            "categories": ["Host Intrusion Prevention System"],
            "information": {
                "ssh_port": {
                    "description": "Port on which the SSH server runs",
                    "type": "INTEGER",
                    "properties": [
                        "CONFIGURATION",
                        "MANDATORY",
                        "WITH_DEFAULT_VALUE",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "max_retries": {
                    "description": "Login attempts limit above which a user is banned",
                    "type": "INTEGER",
                    "properties": [
                        "CONFIGURATION",
                        "MANDATORY",
                        "WITH_DEFAULT_VALUE",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "ban_seconds": {
                    "description": "Ban duration in seconds",
                    "type": "INTEGER",
                    "properties": [
                        "CONFIGURATION",
                        "MANDATORY",
                        "WITH_DEFAULT_VALUE",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "ignored_ips": {
                    "description": "IPs to ignore. Can identify machines like the pentest-related one or controlled strictly by your cloud provider.",
                    "type": "LIST_OF_STRINGS",
                    "properties": [
                        "CONFIGURATION",
                        "OPTIONAL",
                        "WITH_DEFAULT_VALUE",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "jails_count": {
                    "description": "Number of set jails",
                    "type": "INTEGER",
                    "properties": ["METRIC", "READ_ONLY"]
                },
                "active_jails": {
                    "description": "Active jails",
                    "type": "LIST_OF_STRINGS",
                    "properties": ["METRIC", "READ_ONLY"]
                },
                "banned_ips": {
                    "description": "Banned IPs from all jails",
                    "type": "LIST_OF_STRINGS",
                    "properties": ["METRIC", "READ_ONLY"]
                }
            },
            "tests": {
                "ubuntu": {
                    "description": "Checks if the operating system is Ubuntu.",
                    "type": "REQUIREMENT"
                },
                "active_service": {
                    "description": "Checks if the Fail2ban service is active.",
                    "type": "OPERATIONAL"
                },
                "command": {
                    "description": "Checks if the Fail2ban client is registered as a command.",
                    "type": "PRESENCE"
                },
                "healthcheck": {
                    "description": "Checks if Fail2ban blocks an IP when identifying multiple logs generated by it.",
                    "type": "SECURITY"
                }
            }
        },
        "teler": {
            "identifier": "teler",
            "full_name": "teler",
            "maturity": "Production",
            "description": "teler is a real-time intrusion detection and threat alert based on web log. Targets only nginx installed on Ubuntu.",
            "categories": ["Web Intrusion Detection System"],
            "information": {
                "port": {
                    "description": "Port on which the web server runs",
                    "type": "INTEGER",
                    "properties": [
                        "CONFIGURATION",
                        "MANDATORY",
                        "WITH_DEFAULT_VALUE",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "log_format": {
                    "description": "Format in which the messages are logged",
                    "type": "STRING",
                    "properties": [
                        "CONFIGURATION",
                        "MANDATORY",
                        "WITH_DEFAULT_VALUE",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "log_location": {
                    "description": "Location in which nginx logs messages",
                    "type": "STRING",
                    "properties": [
                        "CONFIGURATION",
                        "MANDATORY",
                        "WITH_DEFAULT_VALUE",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "command": {
                    "description": "Command used to create teler's process and crontab",
                    "type": "STRING",
                    "properties": [
                        "CONFIGURATION",
                        "READ_ONLY",
                        "AUTO_GENERATED_BEFORE_INSTALL"
                    ]
                },
                "version": {
                    "description": "Installed version",
                    "type": "STRING",
                    "properties": ["METRIC"]
                },
                "architecture": {
                    "description": "Binary's architecture",
                    "type": "STRING",
                    "properties": [
                        "CONFIGURATION",
                        "READ_ONLY",
                        "AUTO_GENERATED_BEFORE_INSTALL"
                    ]
                },
                "alerts_count": {
                    "description": "Total number of generated alerts",
                    "type": "INTEGER",
                    "properties": ["METRIC", "READ_ONLY"]
                },
                "daily_alerts_count": {
                    "description": "Total number of alerts generated today",
                    "type": "INTEGER",
                    "properties": ["METRIC", "READ_ONLY"]
                },
                "top_attacks_types": {
                    "description": "Top 3 types of web attacks",
                    "type": "LIST_OF_STRINGS",
                    "properties": ["METRIC", "READ_ONLY"]
                },
                "top_attackers": {
                    "description": "Top 3 attackers",
                    "type": "LIST_OF_STRINGS",
                    "properties": ["METRIC", "READ_ONLY"]
                },
                "fail2ban_integration": {
                    "description": "Whether the integration with Fail2ban is activated",
                    "type": "BOOLEAN",
                    "properties": [
                        "CONFIGURATION",
                        "MANDATORY",
                        "WITH_DEFAULT_VALUE",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                }
            },
            "tests": {
                "bad_user_agent_detection": {
                    "description": "Checks if teler detects a request with a bad user agent.",
                    "type": "SECURITY"
                },
                "internet_access": {
                    "description": "Checks if host has Internet access.",
                    "type": "REQUIREMENT"
                },
                "process_running": {
                    "description": "Checks if teler's process is running.",
                    "type": "OPERATIONAL"
                },
                "presence": {
                    "description": "Checks if a file is present.",
                    "type": "PRESENCE"
                },
                "supported_architecture": {
                    "description": "Checks if there is any build for this architecture.",
                    "type": "REQUIREMENT"
                },
                "nginx_active": {
                    "description": "Checks if nginx is installed and the service is active.",
                    "type": "REQUIREMENT"
                }
            }
        },
        "lets_encrypt": {
            "identifier": "lets_encrypt",
            "full_name": "Let's Encrypt x Certbot",
            "maturity": "Production",
            "description": "Let's Encrypt is a free, automated, and open certificate authority brought to you by the nonprofit Internet Security Research Group (ISRG). Certbot is a free, open source software tool for automatically using Let's Encrypt certificates on manually-administrated websites to enable HTTPS.",
            "categories": ["Encryption for Web Applications"],
            "information": {
                "revoke_reason": {
                    "description": "The reason why Let's Encrypt has been removed. Choose from 'unspecified', 'keycompromise', 'affiliationchanged', 'superseded', 'cessationofoperation', if you wish to change the reason.",
                    "type": "STRING",
                    "properties": [
                        "CONFIGURATION",
                        "OPTIONAL",
                        "WITH_DEFAULT_VALUE",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "email": {
                    "description": "The email of the user whom installs Let's Encrypt on the given domain",
                    "type": "STRING",
                    "properties": [
                        "CONFIGURATION",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "domain": {
                    "description": "The domain on which the user installs Let's Encrypt",
                    "type": "STRING",
                    "properties": [
                        "CONFIGURATION",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "log_location": {
                    "description": "Location where Nginx logs messages",
                    "type": "STRING",
                    "properties": [
                        "CONFIGURATION",
                        "MANDATORY",
                        "NON_DEDUCTIBLE",
                        "READ_ONLY",
                        "AUTO_GENERATED_BEFORE_INSTALL"
                    ]
                },
                "secured_requests": {
                    "description": "Total number of secured requests",
                    "type": "INTEGER",
                    "properties": ["METRIC", "READ_ONLY"]
                },
                "secured_requests_today": {
                    "description": "Total number of secured requests today",
                    "type": "INTEGER",
                    "properties": ["METRIC", "READ_ONLY"]
                },
                "version": {
                    "description": "Installed version",
                    "type": "STRING",
                    "properties": ["METRIC", "READ_ONLY"]
                }
            },
            "tests": {
                "ubuntu": {
                    "description": "Checks if the operating system is Ubuntu.",
                    "type": "REQUIREMENT"
                },
                "internet_access": {
                    "description": "Checks if host has Internet access.",
                    "type": "REQUIREMENT"
                },
                "request_via_https": {
                    "description": "Checks if the site is secured with Let's Encrypt.",
                    "type": "SECURITY"
                },
                "nginx_active": {
                    "description": "Checks if Nginx is installed and the service is active.",
                    "type": "REQUIREMENT"
                },
                "configuration_file_presence": {
                    "description": "Checks if the old Nginx configuration file is saved in /opt/mutablesecurity/lets_encrypt.",
                    "type": "PRESENCE"
                },
                "domain_request": {
                    "description": "Checks if the site exists before trying to generate certificate.",
                    "type": "REQUIREMENT"
                }
            }
        },
        "clamav": {
            "identifier": "clamav",
            "full_name": "ClamAV",
            "maturity": "Production",
            "description": "Clam AntiVirus (ClamAV) is a free software, cross-platfom antimalware toolkit able to detect many types of malware, including viruses. ClamAV includes a command-line scanner, automatic database updater, and a scalable multi-threaded daemon running on an anti-virus engine from a shared library. FreshClam is a virus database update tool for ClamAV. ClamAV Daemon checks periodically for virus database definition updates, downloads, installs them, and notifies clamd to refresh it's in-memory virus database cache.",
            "categories": ["Antimalware", "Host Protection"],
            "information": {
                "scan_log_location": {
                    "description": "The location of the generated logs after the on-demand/crontab scans.Chose a file in which the logs will be stored if you would like to change.",
                    "type": "STRING",
                    "properties": [
                        "MANDATORY",
                        "WITH_DEFAULT_VALUE",
                        "CONFIGURATION",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "quarantine_location": {
                    "description": "The location where the infected files will be moved to after the on-demand/crontab scans. Select a directory in which the quarantine will take place if you would like to change.",
                    "type": "STRING",
                    "properties": [
                        "MANDATORY",
                        "WITH_DEFAULT_VALUE",
                        "CONFIGURATION",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "scan_location": {
                    "description": "The location where the on-demand/crontab scans will take place.Select a different directory if you would like to change.",
                    "type": "STRING",
                    "properties": [
                        "MANDATORY",
                        "WITH_DEFAULT_VALUE",
                        "CONFIGURATION",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "scan_minute": {
                    "description": "The minute (0-59, or * for any) when the crontab scan will take place",
                    "type": "STRING",
                    "properties": [
                        "OPTIONAL",
                        "WITH_DEFAULT_VALUE",
                        "CONFIGURATION",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "scan_hour": {
                    "description": "The hour (0-23, or * for any) when the crontab scan will take place",
                    "type": "STRING",
                    "properties": [
                        "OPTIONAL",
                        "WITH_DEFAULT_VALUE",
                        "CONFIGURATION",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "scan_month": {
                    "description": "The month (1-12, JAN-DEC, or * for any) when the crontab scan will take place",
                    "type": "STRING",
                    "properties": [
                        "OPTIONAL",
                        "WITH_DEFAULT_VALUE",
                        "CONFIGURATION",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "scan_day_of_week": {
                    "description": "The day (0-6, SUN-SAT, 7 for Sunday or * for any) of the week when the crontab scan will take place",
                    "type": "STRING",
                    "properties": [
                        "OPTIONAL",
                        "WITH_DEFAULT_VALUE",
                        "CONFIGURATION",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "scan_day_of_month": {
                    "description": "The day (1-31, or * for any) of the month when the crontab scan will take place",
                    "type": "STRING",
                    "properties": [
                        "OPTIONAL",
                        "WITH_DEFAULT_VALUE",
                        "CONFIGURATION",
                        "NON_DEDUCTIBLE",
                        "WRITABLE"
                    ]
                },
                "version": {
                    "description": "Installed version",
                    "type": "STRING",
                    "properties": ["METRIC", "READ_ONLY"]
                },
                "total_infected_files_detected": {
                    "description": "Total number of infected files detected overall",
                    "type": "INTEGER",
                    "properties": ["METRIC", "READ_ONLY"]
                },
                "daily_infected_files_detected": {
                    "description": "Total number of infected files detected today",
                    "type": "INTEGER",
                    "properties": ["METRIC", "READ_ONLY"]
                }
            },
            "tests": {
                "ubuntu": {
                    "description": "Checks if the operating system is Ubuntu.",
                    "type": "REQUIREMENT"
                },
                "internet_access": {
                    "description": "Checks if host has Internet access.",
                    "type": "REQUIREMENT"
                },
                "active_database": {
                    "description": "Checks if the ClamAV virus database service is active.",
                    "type": "OPERATIONAL"
                },
                "eicar_detection": {
                    "description": "Creates a EICAR-STANDARD-ANTIVIRUS-TEST-FILE and checks if ClamAV is able to detect it.",
                    "type": "SECURITY"
                }
            }
        }
    }
}
